syntax = "proto3";

package planetmintgo.dao;

import "planetmintgo/dao/mint_request.proto";
import "planetmintgo/dao/params.proto";
import "amino/amino.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/planetmint/planetmint-go/x/dao/types";

// Msg defines the Msg service.
service Msg {
  rpc ReissueRDDLProposal (MsgReissueRDDLProposal) returns (MsgReissueRDDLProposalResponse);
  rpc MintToken           (MsgMintToken          ) returns (MsgMintTokenResponse          );
  rpc ReissueRDDLResult   (MsgReissueRDDLResult  ) returns (MsgReissueRDDLResultResponse  );
  rpc UpdateParams        (MsgUpdateParams       ) returns (MsgUpdateParamsResponse       );
}
message MsgReissueRDDLProposal {
  string creator     = 1;
  string proposer    = 2;
  string tx          = 3;
  int64  blockHeight = 4;
}

message MsgReissueRDDLProposalResponse {}

message MsgMintToken {
  string      creator     = 1;
  MintRequest mintRequest = 2;
}

message MsgMintTokenResponse {}

message MsgReissueRDDLResult {
  string creator     = 1;
  string proposer    = 2;
  string txId        = 3;
  int64  blockHeight = 4;
}

message MsgReissueRDDLResultResponse {}

message MsgUpdateParams {
  string creator = 1;
  // params defines the x/dao parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message MsgUpdateParamsResponse {}

